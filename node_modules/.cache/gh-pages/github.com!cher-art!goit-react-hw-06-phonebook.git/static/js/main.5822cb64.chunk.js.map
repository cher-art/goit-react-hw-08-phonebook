{"version":3,"sources":["Component/ContactList/ContactList.module.css","Component/Filter/Filter.module.css","redux/ducks/index.js","Component/Form/Form.js","redux/action/alertAction.js","redux/action/contactAction.js","Component/ContactList/ContactList.js","reduxTool/actionTool/filter.js","reduxTool/ducksTool/index.js","Component/Filter/Filter.js","Component/PhoneBook/PhoneBook.js","Component/App.js","redux/reducer/contactReducer.js","redux/reducer/index.js","redux/reducer/filterReducer.js","redux/reducer/alertReducer.js","redux/store.js","index.js","Component/Form/Form.module.css"],"names":["module","exports","ADD_CONTACT","DELETE_CONTACT","SET_LOCAL_STORAGE","EDIT_FILTER","ALERT_ON","ALERT_OFF","initialState","name","number","Form","useState","data","setData","contacts","useSelector","state","dispatch","useDispatch","onHandleChange","target","value","className","styles","contactForm","onSubmit","e","preventDefault","singleContact","some","contact","type","payload","mainLabel","mainInput","onChange","formBtn","ContactList","id","contactList","contactBtn","onClick","deleteContact","editFilter","createAction","Filter","filter","filterInputValue","PhoneBook","alert","isAlert","useEffect","persistedTasks","localStorage","getItem","parseContact","JSON","parse","setItem","stringify","filterContacts","filterArr","toLowerCase","includes","length","TransitionGroup","component","CSSTransition","classNames","mountOnEnter","unmountOnExit","timeout","in","appear","map","App","Component","rootRreducer","combineReducers","action","uuidv4","store","createStore","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5822cb64.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3vTYv\",\"contactListErr\":\"ContactList_contactListErr__2J27E\",\"contactBtn\":\"ContactList_contactBtn__2CPHz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainInput\":\"Filter_mainInput__2srJO\"};","export const ADD_CONTACT = \"phoneBook/add\";\nexport const DELETE_CONTACT = \"phoneBook/delete\";\nexport const SET_LOCAL_STORAGE = \"phoneBook/setLocalStorage\";\n\nexport const EDIT_FILTER = \"filter/edit\";\n\nexport const ALERT_ON = \"alert/on\";\nexport const ALERT_OFF = \"alert/off\";\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addContact } from \"../../redux/action/contactAction\";\nimport { alertOpen } from \"../../redux/action/alertAction\";\nimport styles from \"./Form.module.css\";\n\nconst initialState = {\n  name: \"\",\n  number: \"\",\n};\n\nconst Form = () => {\n  const [data, setData] = useState(initialState);\n  const { name, number } = data;\n  const contacts = useSelector((state) => state.contacts);\n  const dispatch = useDispatch();\n\n  const onHandleChange = ({ target }) => {\n    setData({ ...data, [target.name]: target.value });\n  };\n\n  const onHandleSubmit = (e) => {\n    e.preventDefault();\n    if (!name || !number) {\n      return;\n    }\n    const singleContact = {\n      name,\n      number,\n    };\n    if (contacts.some((contact) => contact.name === singleContact.name)) {\n      dispatch(alertOpen());\n    } else {\n      dispatch(addContact(singleContact));\n      setData(initialState);\n    }\n  };\n\n  return (\n    <form className={styles.contactForm} onSubmit={onHandleSubmit}>\n      <label className={styles.mainLabel}>\n        Name\n        <input\n          className={styles.mainInput}\n          onChange={onHandleChange}\n          name=\"name\"\n          value={name}\n        />\n      </label>\n      <label className={styles.mainLabel}>\n        Number\n        <input\n          className={styles.mainInput}\n          onChange={onHandleChange}\n          name=\"number\"\n          value={number}\n        />\n      </label>\n      <button className={styles.formBtn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default Form;\n\n// class Form extends Component {\n//   state = {\n//     ...initialState,\n//   };\n\n//   onHandleChange = (e) => {\n//     this.props.isError && this.props.onSetError();\n//     const { name, value } = e.target;\n//     this.setState({ [name]: value });\n//   };\n\n//   onHandleSubmit = (e) => {\n//     e.preventDefault();\n//     this.state.name === \"\" || this.state.number === \"\"\n//       ? this.props.onSetError()\n//       : this.props.addContact({ ...this.state });\n//     this.setState({ ...initialState });\n//   };\n\n//   render() {\n//     return (\n//       <form className={styles.contactForm} onSubmit={this.onHandleSubmit}>\n//         <label className={styles.mainLabel}>\n//           Name\n//           <input\n//             className={styles.mainInput}\n//             onChange={this.onHandleChange}\n//             name=\"name\"\n//             value={this.state.name}\n//           />\n//         </label>\n//         <label className={styles.mainLabel}>\n//           Number\n//           <input\n//             className={styles.mainInput}\n//             onChange={(e) => this.onHandleChange(e)}\n//             name=\"number\"\n//             value={this.state.number}\n//           />\n//         </label>\n//         <button className={styles.formBtn} type=\"submit\">\n//           Add contact\n//         </button>\n//       </form>\n//     );\n//   }\n// }\n\n// export default Form;\n","import { ALERT_ON, ALERT_OFF } from '../ducks/index'\n\nexport const alertOpen = () => ({\n  type: ALERT_ON\n})\n\nexport const alertClose = () => ({\n  type: ALERT_OFF\n})","import { ADD_CONTACT, DELETE_CONTACT, SET_LOCAL_STORAGE } from \"../ducks/index\";\n\nexport const addContact = (objContact) => ({\n  type: ADD_CONTACT,\n  payload: objContact,\n});\nexport const deleteContact = (id) => ({\n  type: DELETE_CONTACT,\n  payload: id,\n});\nexport const setContactLocalStorage = (array) => ({\n  type: SET_LOCAL_STORAGE,\n  payload: array,\n});\n","import React from \"react\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteContact } from \"../../redux/action/contactAction\";\nimport styles from \"./ContactList.module.css\";\nimport \"./ContactList.css\";\n\nconst ContactList = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n  const deleteItem = () => {\n    dispatch(deleteContact(id));\n  };\n  return (\n    <li className={styles.contactList} key={id}>\n      {name}: {number}\n      <button className={styles.contactBtn} onClick={deleteItem} type=\"button\">\n        Delete\n      </button>\n    </li>\n  );\n};\n\nexport default ContactList;\n","import { createAction } from \"@reduxjs/toolkit\";\nimport { EDIT_FILTER } from \"../ducksTool\";\n\nexport const editFilter = createAction(EDIT_FILTER);\n","export const EDIT_FILTER = \"filter/edit\";\nexport const CHANGE_FILTER = \"filter/change\";\n\nexport const ADD_ITEM = \"contacts/add\";\nexport const DELETE_ITEM = \"contacts/delete\";\nexport const SET_ITEMS = \"contacts/set\";\n","import React, { Component } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { editFilter } from \"../../reduxTool/actionTool/filter\";\nimport styles from \"./Filter.module.css\";\nimport \"./Filter.css\";\n\nconst Filter = () => {\n  const filter = useSelector((state) => state.filter);\n  const dispatch = useDispatch();\n\n  const inputHandler = (e) => {\n    e.preventDefault();\n    const filterInputValue = e.target.value;\n    dispatch(editFilter(filterInputValue));\n  };\n\n  return (\n    <label>\n      <input\n        className={styles.mainInput}\n        name=\"filter\"\n        type=\"text\"\n        onChange={inputHandler}\n        value={filter}\n      />\n    </label>\n  );\n};\n\n// class Filter extends Component {\n//   render() {\n//     const contactsLength = this.props.contacts.length;\n//     return (\n//       <CSSTransition\n//         in={contactsLength > 1}\n//         classNames=\"label\"\n//         timeout={500}\n//         unmountOnExit\n//       >\n//         <label>\n//           <input\n//             className={styles.mainInput}\n//             name=\"filter\"\n//             onChange={this.props.onHandleChange}\n//             value={this.props.filter}\n//           />\n//         </label>\n//       </CSSTransition>\n//     );\n//   }\n// }\n\nexport default Filter;\n","import React, { useEffect } from \"react\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { alertClose } from \"../../redux/action/alertAction\";\nimport { setContactLocalStorage } from \"../../redux/action/contactAction\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Form from \"../Form/Form\";\nimport ContactList from \"../ContactList/ContactList\";\nimport Filter from \"../Filter/Filter\";\n// import styles from \"./PhoneBook.module.css\";\nimport \"./PhoneBook.css\";\n\nconst PhoneBook = () => {\n  const contacts = useSelector((state) => state.contacts);\n  const filter = useSelector((state) => state.filter);\n  const alert = useSelector((state) => state.isAlert);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const persistedTasks = localStorage.getItem(\"contacts\");\n    const parseContact = JSON.parse(persistedTasks);\n    if (persistedTasks) {\n      dispatch(setContactLocalStorage(parseContact));\n    }\n  }, [dispatch]);\n\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const filterContacts = () => {\n    const filterArr = contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n    if (filterArr.length >= 1) {\n      return filterArr;\n    } else {\n      return contacts;\n    }\n  };\n\n  const closeAlert = () => {\n    dispatch(alertClose());\n  };\n\n  return (\n    <>\n      <TransitionGroup className=\"alertBox\" component=\"div\">\n        {alert ? (\n          <CSSTransition\n            classNames=\"alert__Box\"\n            mountOnEnter\n            unmountOnExit\n            timeout={800}\n          >\n            <div className=\"alert__Box\">\n              <h2>{`A contact with the same name already exists!`}</h2>\n              <button onClick={closeAlert} className=\"alertButton\">\n                ok\n              </button>\n            </div>\n          </CSSTransition>\n        ) : null}\n      </TransitionGroup>\n\n      <CSSTransition\n        in={true}\n        appear={true}\n        timeout={500}\n        classNames=\"logo\"\n        unmountOnExit\n      >\n        <h1 className=\"title\">PhoneBook</h1>\n      </CSSTransition>\n      <CSSTransition\n        in={true}\n        appear={true}\n        timeout={1000}\n        classNames=\"form\"\n        unmountOnExit\n      >\n        <Form />\n      </CSSTransition>\n      <CSSTransition\n        in={filterContacts().length >= 1}\n        timeout={250}\n        classNames=\"contactTitle\"\n        unmountOnExit\n      >\n        <h2 className=\"findTitle\">Find contacts</h2>\n      </CSSTransition>\n      <CSSTransition\n        in={filterContacts().length >= 1}\n        timeout={250}\n        classNames=\"contactTitle\"\n        unmountOnExit\n      >\n        <Filter />\n      </CSSTransition>\n      <TransitionGroup component=\"ul\" className=\"list\">\n        {filterContacts().map((contact) => (\n          <CSSTransition classNames=\"list__item\" timeout={800}>\n            <ContactList {...contact} />\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    </>\n  );\n};\n\nexport default PhoneBook;\n\n// class PhoneBook extends Component {\n//   state = {\n//     contacts: [],\n//     filter: \"\",\n//     name: \"\",\n//     isError: false,\n//     alert: false,\n//     // number: '',\n//   };\n\n//   componentDidMount() {\n//     const persistedTasks = localStorage.getItem(\"contacts\");\n//     if (persistedTasks) {\n//       this.setState({\n//         contacts: JSON.parse(persistedTasks),\n//       });\n//     }\n//   }\n\n//   componentDidUpdate(prevProps, prevState) {\n//     if (prevState.contacts !== this.state.contacts) {\n//       localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n//     }\n//   }\n\n//   addContact = (contact) => {\n//     const arr = this.state.contacts;\n//     const result = arr.some((item) => item.name.includes(contact.name));\n//     result\n//       ? this.setState({ alert: result })\n//       : this.setState((prev) => ({\n//           contacts: [...prev.contacts, { ...contact, id: uuidv4() }],\n//         }));\n//   };\n\n//   deleteContact = (id) => {\n//     this.setState({\n//       contacts: this.state.contacts.filter((contact) => contact.id !== id),\n//     });\n//   };\n\n//   filterContact = () => {\n//     return this.state.contacts.filter((contact) =>\n//       contact.name.toLowerCase().includes(this.state.filter.toLowerCase())\n//     );\n//   };\n\n//   onHandleChange = (e) => {\n//     const { name, value } = e.target;\n//     this.setState({ [name]: value });\n//   };\n\n//   onSetError = () => {\n//     this.setState((prev) => ({ isError: !prev.isError }));\n//   };\n\n//   closeAlert = () => {\n//     this.setState({ alert: false });\n//   };\n\n//   render() {\n//     const { isError } = this.state;\n//     return (\n//       <>\n//         <TransitionGroup className=\"alertBox\" component=\"div\">\n//           {this.state.alert ? (\n//             <CSSTransition\n//               classNames=\"alert__Box\"\n//               mountOnEnter\n//               unmountOnExit\n//               timeout={800}\n//             >\n//               <div className=\"alert__Box\">\n//                 <h2>{`A contact with the same name already exists!`}</h2>\n//                 <button onClick={this.closeAlert} className=\"alertButton\">\n//                   ok\n//                 </button>\n//               </div>\n//             </CSSTransition>\n//           ) : null}\n//         </TransitionGroup>\n\n//         <CSSTransition\n//           in={true}\n//           appear={true}\n//           timeout={500}\n//           classNames=\"logo\"\n//           unmountOnExit\n//         >\n//           <h1 className=\"title\">PhoneBook</h1>\n//         </CSSTransition>\n//         <CSSTransition\n//           in={true}\n//           appear={true}\n//           timeout={1000}\n//           classNames=\"form\"\n//           unmountOnExit\n//         >\n//           <Form\n//             addContact={this.addContact}\n//             isError={this.state.isError}\n//             onSetError={this.onSetError}\n//           />\n//         </CSSTransition>\n//         <CSSTransition\n//           in={this.state.contacts.length > 1}\n//           timeout={250}\n//           classNames=\"contactTitle\"\n//           unmountOnExit\n//         >\n//           <h2 className=\"title\">Find contacts</h2>\n//         </CSSTransition>\n//         <CSSTransition\n//           in={isError}\n//           classNames=\"notFound\"\n//           timeout={500}\n//           unmountOnExit\n//         >\n//           <h2 className={styles.contactListErr}>\n//             Name or Contact is not found!!!\n//           </h2>\n//         </CSSTransition>\n//         <Filter\n//           filter={this.state.filter}\n//           onHandleChange={this.onHandleChange}\n//           contacts={this.state.contacts}\n//         />\n//         {/* <CSSTransition> */}\n//         <ContactList\n//           contacts={\n//             this.state.filter ? this.filterContact() : this.state.contacts\n//           }\n//           deleteContact={this.deleteContact}\n//         />\n//         {/* </CSSTransition> */}\n//       </>\n//     );\n//   }\n// }\n\n// export default PhoneBook;\n","import React, { Component } from \"react\";\nimport PhoneBook from \"./PhoneBook/PhoneBook\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <PhoneBook />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { ADD_CONTACT, DELETE_CONTACT, SET_LOCAL_STORAGE } from \"../ducks/index\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst initialState = [];\n\nexport const contacts = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_LOCAL_STORAGE:\n      return [...action.payload];\n    case ADD_CONTACT:\n      return [...state, { ...action.payload, id: uuidv4() }];\n    case DELETE_CONTACT:\n      return state.filter((contact) => contact.id !== action.payload);\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { contacts } from \"./contactReducer\";\nimport { filter } from \"../reducer/filterReducer\";\nimport { isAlert } from \"../reducer/alertReducer\";\nconst rootRreducer = combineReducers({\n  contacts,\n  filter,\n  isAlert,\n});\n\nexport default rootRreducer;\n","import { EDIT_FILTER } from \"../ducks/index\";\n\nconst initialState = \"\";\n\nexport const filter = (state = initialState, action) => {\n  switch (action.type) {\n    case EDIT_FILTER:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","import { ALERT_ON, ALERT_OFF } from \"../ducks/index\";\n\nconst initilState = false;\n\nexport const isAlert = (state = initilState, action) => {\n  switch (action.type) {\n    case ALERT_ON:\n      return true;\n    case ALERT_OFF:\n      return false\n    default: \n      return state\n  }\n};\n","import { createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootRreducer from \"./reducer\";\n\nconst store = createStore(rootRreducer, composeWithDevTools());\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Component/App\";\nimport \"./index.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"Form_contactForm__2bm6X\",\"mainLabel\":\"Form_mainLabel__zNmmp\",\"mainInput\":\"Form_mainInput__2j580\",\"formBtn\":\"Form_formBtn__2LnlG\"};"],"sourceRoot":""}