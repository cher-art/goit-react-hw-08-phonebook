{"ast":null,"code":"import axios from \"axios\";\nimport { setError, resetError } from \"../action/errorAction\";\nimport { loaderOn, loaderOff } from \"../action/loaderAction\";\nimport { setContactLocalStorage, addConct, deleteContact, setContact } from \"../action/contactAction\";\nimport { resetToken, setToken } from \"../action/tokenAction\";\n\nconst options = token => ({\n  headers: {\n    common: {\n      Authorization: `Bearer ${token}`\n    }\n  }\n});\n\nexport const getContactsOperation = token => async dispatch => {\n  try {\n    dispatch(loaderOn());\n    const result = await axios.get(`https://goit-phonebook-api.herokuapp.com/contacts`, options(token));\n    console.log(result);\n    dispatch(setContact(result.data));\n  } catch (error) {\n    dispatch(setError(\"Оууууу, щось сталось =D\"));\n  } finally {\n    dispatch(loaderOff());\n  }\n};\nexport const postContactsOperations = (contact, token) => async dispatch => {\n  try {\n    dispatch(loaderOn());\n    const result = await axios.post(`https://goit-phonebook-api.herokuapp.com/contacts`, contact, options(token));\n    dispatch(setContact(result.data));\n  } catch (error) {\n    dispatch(setError(\"Оууууу, щось сталось =D\"));\n  } finally {\n    dispatch(loaderOff());\n  }\n};\nexport const deleteContactOperation = (contactId, token) => async dispatch => {\n  try {\n    await axios.delete(`https://goit-phonebook-api.herokuapp.com/contacts/${contactId}`, options(token));\n    dispatch(deleteContact(contactId));\n  } catch (error) {\n    dispatch(setError(\"Оууууу, щось сталось =D\"));\n  } finally {\n    dispatch(loaderOff());\n  }\n};","map":{"version":3,"sources":["/Users/timcher/Documents/GitHub/goit-react-hw-08-phonebook/src/redux/operations/taskOperations.js"],"names":["axios","setError","resetError","loaderOn","loaderOff","setContactLocalStorage","addConct","deleteContact","setContact","resetToken","setToken","options","token","headers","common","Authorization","getContactsOperation","dispatch","result","get","console","log","data","error","postContactsOperations","contact","post","deleteContactOperation","contactId","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,uBAArC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,wBAApC;AACA,SACEC,sBADF,EAEEC,QAFF,EAGEC,aAHF,EAIEC,UAJF,QAKO,yBALP;AAMA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,uBAArC;;AAEA,MAAMC,OAAO,GAAIC,KAAD,KAAa;AAC3BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,MAAM,EAAE;AACNC,MAAAA,aAAa,EAAG,UAASH,KAAM;AADzB;AADD;AADkB,CAAb,CAAhB;;AAQA,OAAO,MAAMI,oBAAoB,GAAIJ,KAAD,IAAW,MAAOK,QAAP,IAAoB;AACjE,MAAI;AACFA,IAAAA,QAAQ,CAACd,QAAQ,EAAT,CAAR;AACA,UAAMe,MAAM,GAAG,MAAMlB,KAAK,CAACmB,GAAN,CAClB,mDADkB,EACkCR,OAAO,CAACC,KAAD,CADzC,CAArB;AAGAQ,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAD,IAAAA,QAAQ,CAACT,UAAU,CAACU,MAAM,CAACI,IAAR,CAAX,CAAR;AACD,GAPD,CAOE,OAAOC,KAAP,EAAc;AACdN,IAAAA,QAAQ,CAAChB,QAAQ,CAAC,yBAAD,CAAT,CAAR;AACD,GATD,SASU;AACRgB,IAAAA,QAAQ,CAACb,SAAS,EAAV,CAAR;AACD;AACF,CAbM;AAeP,OAAO,MAAMoB,sBAAsB,GAAG,CAACC,OAAD,EAAUb,KAAV,KAAoB,MAAOK,QAAP,IAAoB;AAC5E,MAAI;AACFA,IAAAA,QAAQ,CAACd,QAAQ,EAAT,CAAR;AACA,UAAMe,MAAM,GAAG,MAAMlB,KAAK,CAAC0B,IAAN,CAClB,mDADkB,EAEnBD,OAFmB,EAEVd,OAAO,CAACC,KAAD,CAFG,CAArB;AAIAK,IAAAA,QAAQ,CAACT,UAAU,CAACU,MAAM,CAACI,IAAR,CAAX,CAAR;AACD,GAPD,CAOE,OAAOC,KAAP,EAAc;AACdN,IAAAA,QAAQ,CAAChB,QAAQ,CAAC,yBAAD,CAAT,CAAR;AACD,GATD,SASU;AACRgB,IAAAA,QAAQ,CAACb,SAAS,EAAV,CAAR;AACD;AACF,CAbM;AAeP,OAAO,MAAMuB,sBAAsB,GAAG,CAACC,SAAD,EAAYhB,KAAZ,KAAuB,MAAOK,QAAP,IAAoB;AAC/E,MAAI;AACF,UAAMjB,KAAK,CAAC6B,MAAN,CACH,qDAAoDD,SAAU,EAD3D,EAC8DjB,OAAO,CAACC,KAAD,CADrE,CAAN;AAGAK,IAAAA,QAAQ,CAACV,aAAa,CAACqB,SAAD,CAAd,CAAR;AACD,GALD,CAKE,OAAOL,KAAP,EAAc;AACdN,IAAAA,QAAQ,CAAChB,QAAQ,CAAC,yBAAD,CAAT,CAAR;AACD,GAPD,SAOU;AACRgB,IAAAA,QAAQ,CAACb,SAAS,EAAV,CAAR;AACD;AACF,CAXM","sourcesContent":["import axios from \"axios\";\nimport { setError, resetError } from \"../action/errorAction\";\nimport { loaderOn, loaderOff } from \"../action/loaderAction\";\nimport {\n  setContactLocalStorage,\n  addConct,\n  deleteContact,\n  setContact,\n} from \"../action/contactAction\";\nimport { resetToken, setToken } from \"../action/tokenAction\";\n\nconst options = (token) =>  ({\n  headers: {\n    common: {\n      Authorization: `Bearer ${token}`,\n    }\n  },\n});\n\nexport const getContactsOperation = (token) => async (dispatch) => {\n  try {\n    dispatch(loaderOn());\n    const result = await axios.get(\n      `https://goit-phonebook-api.herokuapp.com/contacts`, options(token)\n    );\n    console.log(result);\n    dispatch(setContact(result.data));\n  } catch (error) {\n    dispatch(setError(\"Оууууу, щось сталось =D\"));\n  } finally {\n    dispatch(loaderOff());\n  }\n};\n\nexport const postContactsOperations = (contact, token) => async (dispatch) => {\n  try {\n    dispatch(loaderOn());\n    const result = await axios.post(\n      `https://goit-phonebook-api.herokuapp.com/contacts`,\n      contact, options(token)\n    );\n    dispatch(setContact(result.data));\n  } catch (error) {\n    dispatch(setError(\"Оууууу, щось сталось =D\"));\n  } finally {\n    dispatch(loaderOff());\n  }\n};\n\nexport const deleteContactOperation = (contactId, token ) => async (dispatch) => {\n  try {\n    await axios.delete(\n      `https://goit-phonebook-api.herokuapp.com/contacts/${contactId}`, options(token)\n    );\n    dispatch(deleteContact(contactId));\n  } catch (error) {\n    dispatch(setError(\"Оууууу, щось сталось =D\"));\n  } finally {\n    dispatch(loaderOff());\n  }\n};\n"]},"metadata":{},"sourceType":"module"}