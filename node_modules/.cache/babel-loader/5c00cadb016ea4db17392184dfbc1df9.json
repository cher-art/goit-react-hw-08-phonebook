{"ast":null,"code":"import axios from \"axios\";\nimport { setError, resetError } from \"../action/errorAction\";\nimport { loaderOn, loaderOff } from \"../action/loaderAction\";\nimport { setContactLocalStorage, addConct, deleteContact, setContact } from \"../action/contactAction\";\nconst options = {\n  header: {\n    \"Content-type\": \"application/json\"\n  }\n};\nexport const getContactsOperation = () => async dispatch => {\n  try {\n    dispatch(loaderOn());\n    const result = await axios.get(`http://localhost:5000/contacts`);\n    dispatch(setContact(result.data));\n  } catch (error) {\n    dispatch(setError(\"Оууууу, щось сталось =D\"));\n  } finally {\n    dispatch(loaderOff());\n  }\n};\nexport const postContactsOperations = contact => async dispatch => {\n  try {\n    dispatch(loaderOn());\n    await axios.post(`http://localhost:5000/contacts`, contact, options);\n  } catch (error) {\n    dispatch(setError(\"Оууууу, щось сталось =D\"));\n  } finally {\n    dispatch(loaderOff());\n  }\n};\nexport const deleteContactOperation = id => async dispatch => {\n  try {\n    await axios.delete(`http://localhost:5000/contacts/${id}`);\n    dispatch(deleteContact(id));\n  } catch (error) {\n    dispatch(setError(\"Оууууу, щось сталось =D\"));\n  } finally {\n    dispatch(loaderOff());\n  }\n};","map":{"version":3,"sources":["/Users/timcher/Documents/GitHub/goit-react-hw-07-phonebook/src/redux/operations/taskOperations.js"],"names":["axios","setError","resetError","loaderOn","loaderOff","setContactLocalStorage","addConct","deleteContact","setContact","options","header","getContactsOperation","dispatch","result","get","data","error","postContactsOperations","contact","post","deleteContactOperation","id","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,uBAArC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,wBAApC;AACA,SACEC,sBADF,EAEEC,QAFF,EAGEC,aAHF,EAIEC,UAJF,QAKO,yBALP;AAOA,MAAMC,OAAO,GAAG;AACdC,EAAAA,MAAM,EAAE;AACN,oBAAgB;AADV;AADM,CAAhB;AAMA,OAAO,MAAMC,oBAAoB,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC5D,MAAI;AACFA,IAAAA,QAAQ,CAACT,QAAQ,EAAT,CAAR;AACA,UAAMU,MAAM,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAW,gCAAX,CAArB;AACAF,IAAAA,QAAQ,CAACJ,UAAU,CAACK,MAAM,CAACE,IAAR,CAAX,CAAR;AACD,GAJD,CAIE,OAAOC,KAAP,EAAc;AACdJ,IAAAA,QAAQ,CAACX,QAAQ,CAAC,yBAAD,CAAT,CAAR;AACD,GAND,SAMU;AACRW,IAAAA,QAAQ,CAACR,SAAS,EAAV,CAAR;AACD;AACF,CAVM;AAYP,OAAO,MAAMa,sBAAsB,GAAIC,OAAD,IAAa,MAAON,QAAP,IAAoB;AACrE,MAAI;AACFA,IAAAA,QAAQ,CAACT,QAAQ,EAAT,CAAR;AACA,UAAMH,KAAK,CAACmB,IAAN,CAAY,gCAAZ,EAA6CD,OAA7C,EAAsDT,OAAtD,CAAN;AACD,GAHD,CAGE,OAAOO,KAAP,EAAc;AACdJ,IAAAA,QAAQ,CAACX,QAAQ,CAAC,yBAAD,CAAT,CAAR;AACD,GALD,SAKU;AACRW,IAAAA,QAAQ,CAACR,SAAS,EAAV,CAAR;AACD;AACF,CATM;AAWP,OAAO,MAAMgB,sBAAsB,GAAIC,EAAD,IAAQ,MAAOT,QAAP,IAAoB;AAChE,MAAI;AACF,UAAMZ,KAAK,CAACsB,MAAN,CAAc,kCAAiCD,EAAG,EAAlD,CAAN;AACAT,IAAAA,QAAQ,CAACL,aAAa,CAACc,EAAD,CAAd,CAAR;AACD,GAHD,CAGE,OAAOL,KAAP,EAAc;AACdJ,IAAAA,QAAQ,CAACX,QAAQ,CAAC,yBAAD,CAAT,CAAR;AACD,GALD,SAKU;AACRW,IAAAA,QAAQ,CAACR,SAAS,EAAV,CAAR;AACD;AACF,CATM","sourcesContent":["import axios from \"axios\";\nimport { setError, resetError } from \"../action/errorAction\";\nimport { loaderOn, loaderOff } from \"../action/loaderAction\";\nimport {\n  setContactLocalStorage,\n  addConct,\n  deleteContact,\n  setContact,\n} from \"../action/contactAction\";\n\nconst options = {\n  header: {\n    \"Content-type\": \"application/json\",\n  },\n};\n\nexport const getContactsOperation = () => async (dispatch) => {\n  try {\n    dispatch(loaderOn());\n    const result = await axios.get(`http://localhost:5000/contacts`);\n    dispatch(setContact(result.data));\n  } catch (error) {\n    dispatch(setError(\"Оууууу, щось сталось =D\"));\n  } finally {\n    dispatch(loaderOff());\n  }\n};\n\nexport const postContactsOperations = (contact) => async (dispatch) => {\n  try {\n    dispatch(loaderOn());\n    await axios.post(`http://localhost:5000/contacts`, contact, options);\n  } catch (error) {\n    dispatch(setError(\"Оууууу, щось сталось =D\"));\n  } finally {\n    dispatch(loaderOff());\n  }\n};\n\nexport const deleteContactOperation = (id) => async (dispatch) => {\n  try {\n    await axios.delete(`http://localhost:5000/contacts/${id}`);\n    dispatch(deleteContact(id));\n  } catch (error) {\n    dispatch(setError(\"Оууууу, щось сталось =D\"));\n  } finally {\n    dispatch(loaderOff());\n  }\n};\n"]},"metadata":{},"sourceType":"module"}