{"ast":null,"code":"import axios from \"axios\";\nimport { setError, resetError } from \"../action/errorAction\";\nimport { loaderOn, loaderOff } from \"../action/loaderAction\";\nimport { resetToken, setToken } from \"../action/tokenAction\";\nexport const registeredOperation = userData => async dispatch => {\n  try {\n    dispatch(loaderOn());\n    const result = await axios.post(\"https://goit-phonebook-api.herokuapp.com/users/signup\", userData);\n    console.log(result);\n    dispatch(setToken(result.data.token));\n  } catch (error) {\n    dispatch(setError(\"bad request!\"));\n  } finally {\n    dispatch(loaderOff());\n  }\n};\nexport const loginOperation = userData => async dispatch => {\n  try {\n    dispatch(loaderOn());\n    const result = await axios.post(\"https://goit-phonebook-api.herokuapp.com/users/login\", userData);\n    console.log(result);\n    dispatch(setToken(result.data.token));\n  } catch (error) {\n    dispatch(setError(\"bad request!\"));\n  } finally {\n    dispatch(loaderOff());\n  }\n};\nexport const logOut = token => async dispatch => {\n  try {\n    dispatch(loaderOn());\n    const result = await axios({\n      url: \"https://goit-phonebook-api.herokuapp.com/users/logout\",\n      method: \"post\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    dispatch(resetToken());\n  } catch (error) {\n    dispatch(setError(error));\n  } finally {\n    dispatch(loaderOff());\n  }\n};\naxios({\n  url: \"\",\n  method: \"post\",\n  header: {\n    \"Content-type\": \"application/json\"\n  }\n});","map":{"version":3,"sources":["/Users/timcher/Documents/GitHub/goit-react-hw-08-phonebook/src/redux/operations/authOperations.js"],"names":["axios","setError","resetError","loaderOn","loaderOff","resetToken","setToken","registeredOperation","userData","dispatch","result","post","console","log","data","token","error","loginOperation","logOut","url","method","headers","Authorization","header"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,uBAArC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,wBAApC;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,uBAArC;AAEA,OAAO,MAAMC,mBAAmB,GAAIC,QAAD,IAAc,MAAOC,QAAP,IAAoB;AACnE,MAAI;AACFA,IAAAA,QAAQ,CAACN,QAAQ,EAAT,CAAR;AACA,UAAMO,MAAM,GAAG,MAAMV,KAAK,CAACW,IAAN,CACnB,uDADmB,EAEnBH,QAFmB,CAArB;AAIAI,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAD,IAAAA,QAAQ,CAACH,QAAQ,CAACI,MAAM,CAACI,IAAP,CAAYC,KAAb,CAAT,CAAR;AACD,GARD,CAQE,OAAOC,KAAP,EAAc;AACdP,IAAAA,QAAQ,CAACR,QAAQ,CAAC,cAAD,CAAT,CAAR;AACD,GAVD,SAUU;AACRQ,IAAAA,QAAQ,CAACL,SAAS,EAAV,CAAR;AACD;AACF,CAdM;AAgBP,OAAO,MAAMa,cAAc,GAAIT,QAAD,IAAc,MAAOC,QAAP,IAAoB;AAC9D,MAAI;AACFA,IAAAA,QAAQ,CAACN,QAAQ,EAAT,CAAR;AACA,UAAMO,MAAM,GAAG,MAAMV,KAAK,CAACW,IAAN,CACnB,sDADmB,EAEnBH,QAFmB,CAArB;AAIAI,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAD,IAAAA,QAAQ,CAACH,QAAQ,CAACI,MAAM,CAACI,IAAP,CAAYC,KAAb,CAAT,CAAR;AACD,GARD,CAQE,OAAOC,KAAP,EAAc;AACdP,IAAAA,QAAQ,CAACR,QAAQ,CAAC,cAAD,CAAT,CAAR;AACD,GAVD,SAUU;AACRQ,IAAAA,QAAQ,CAACL,SAAS,EAAV,CAAR;AACD;AACF,CAdM;AAgBP,OAAO,MAAMc,MAAM,GAAIH,KAAD,IAAW,MAAON,QAAP,IAAoB;AACnD,MAAI;AACFA,IAAAA,QAAQ,CAACN,QAAQ,EAAT,CAAR;AACA,UAAMO,MAAM,GAAG,MAAMV,KAAK,CAAC;AACzBmB,MAAAA,GAAG,EAAE,uDADoB;AAEzBC,MAAAA,MAAM,EAAE,MAFiB;AAGzBC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASP,KAAM;AAAjC;AAHgB,KAAD,CAA1B;AAKAN,IAAAA,QAAQ,CAACJ,UAAU,EAAX,CAAR;AACD,GARD,CAQE,OAAOW,KAAP,EAAc;AACdP,IAAAA,QAAQ,CAACR,QAAQ,CAACe,KAAD,CAAT,CAAR;AACD,GAVD,SAUU;AACRP,IAAAA,QAAQ,CAACL,SAAS,EAAV,CAAR;AACD;AACF,CAdM;AAgBPJ,KAAK,CAAC;AACJmB,EAAAA,GAAG,EAAE,EADD;AAEJC,EAAAA,MAAM,EAAE,MAFJ;AAGJG,EAAAA,MAAM,EAAE;AACN,oBAAgB;AADV;AAHJ,CAAD,CAAL","sourcesContent":["import axios from \"axios\";\nimport { setError, resetError } from \"../action/errorAction\";\nimport { loaderOn, loaderOff } from \"../action/loaderAction\";\nimport { resetToken, setToken } from \"../action/tokenAction\";\n\nexport const registeredOperation = (userData) => async (dispatch) => {\n  try {\n    dispatch(loaderOn());\n    const result = await axios.post(\n      \"https://goit-phonebook-api.herokuapp.com/users/signup\",\n      userData\n    );\n    console.log(result);\n    dispatch(setToken(result.data.token));\n  } catch (error) {\n    dispatch(setError(\"bad request!\"));\n  } finally {\n    dispatch(loaderOff());\n  }\n};\n\nexport const loginOperation = (userData) => async (dispatch) => {\n  try {\n    dispatch(loaderOn());\n    const result = await axios.post(\n      \"https://goit-phonebook-api.herokuapp.com/users/login\",\n      userData\n    );\n    console.log(result);\n    dispatch(setToken(result.data.token));\n  } catch (error) {\n    dispatch(setError(\"bad request!\"));\n  } finally {\n    dispatch(loaderOff());\n  }\n};\n\nexport const logOut = (token) => async (dispatch) => {\n  try {\n    dispatch(loaderOn());\n    const result = await axios({\n      url: \"https://goit-phonebook-api.herokuapp.com/users/logout\",\n      method: \"post\",\n      headers: { Authorization: `Bearer ${token}` },\n    });\n    dispatch(resetToken());\n  } catch (error) {\n    dispatch(setError(error));\n  } finally {\n    dispatch(loaderOff());\n  }\n};\n\naxios({\n  url: \"\",\n  method: \"post\",\n  header: {\n    \"Content-type\": \"application/json\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}