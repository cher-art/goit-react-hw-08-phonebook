{"ast":null,"code":"import axios from \"axios\";\nimport { setError, resetError } from \"../action/errorAction\";\nimport { loaderOn, loaderOff } from \"../action/loaderAction\";\nimport { setContactLocalStorage, addConct, deleteContact, setContact } from \"../action/contactAction\";\nimport { resetToken, setToken } from \"../action/tokenAction\"; // const options = {\n//   header: {\n//     \"Content-type\": \"application/json\",\n//   },\n// };\n\nexport const getContactsOperation = () => async dispatch => {\n  try {\n    dispatch(loaderOn());\n    const result = await axios.get(`http://localhost:5000/contacts`);\n    console.log(result);\n    dispatch(setContact(result.data));\n  } catch (error) {\n    dispatch(setError(\"Оууууу, щось сталось =D\"));\n  } finally {\n    dispatch(loaderOff());\n  }\n};\nexport const postContactsOperations = contact => async dispatch => {\n  try {\n    dispatch(loaderOn());\n    await axios.post(`http://localhost:5000/contacts`, contact);\n  } catch (error) {\n    dispatch(setError(\"Оууууу, щось сталось =D\"));\n  } finally {\n    dispatch(loaderOff());\n  }\n};\nexport const deleteContactOperation = contactId => async dispatch => {\n  try {\n    await axios.delete(`http://localhost:5000/contacts/${contactId}`);\n    dispatch(deleteContact(contactId));\n  } catch (error) {\n    dispatch(setError(\"Оууууу, щось сталось =D\"));\n  } finally {\n    dispatch(loaderOff());\n  }\n};","map":{"version":3,"sources":["/Users/timcher/Documents/GitHub/goit-react-hw-08-phonebook/src/redux/operations/taskOperations.js"],"names":["axios","setError","resetError","loaderOn","loaderOff","setContactLocalStorage","addConct","deleteContact","setContact","resetToken","setToken","getContactsOperation","dispatch","result","get","console","log","data","error","postContactsOperations","contact","post","deleteContactOperation","contactId","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,uBAArC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,wBAApC;AACA,SACEC,sBADF,EAEEC,QAFF,EAGEC,aAHF,EAIEC,UAJF,QAKO,yBALP;AAMA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,uBAArC,C,CAEA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,oBAAoB,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC5D,MAAI;AACFA,IAAAA,QAAQ,CAACT,QAAQ,EAAT,CAAR;AACA,UAAMU,MAAM,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAW,gCAAX,CAArB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAD,IAAAA,QAAQ,CAACJ,UAAU,CAACK,MAAM,CAACI,IAAR,CAAX,CAAR;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AACdN,IAAAA,QAAQ,CAACX,QAAQ,CAAC,yBAAD,CAAT,CAAR;AACD,GAPD,SAOU;AACRW,IAAAA,QAAQ,CAACR,SAAS,EAAV,CAAR;AACD;AACF,CAXM;AAaP,OAAO,MAAMe,sBAAsB,GAAIC,OAAD,IAAa,MAAOR,QAAP,IAAoB;AACrE,MAAI;AACFA,IAAAA,QAAQ,CAACT,QAAQ,EAAT,CAAR;AACA,UAAMH,KAAK,CAACqB,IAAN,CAAY,gCAAZ,EAA6CD,OAA7C,CAAN;AACD,GAHD,CAGE,OAAOF,KAAP,EAAc;AACdN,IAAAA,QAAQ,CAACX,QAAQ,CAAC,yBAAD,CAAT,CAAR;AACD,GALD,SAKU;AACRW,IAAAA,QAAQ,CAACR,SAAS,EAAV,CAAR;AACD;AACF,CATM;AAWP,OAAO,MAAMkB,sBAAsB,GAAIC,SAAD,IAAe,MAAOX,QAAP,IAAoB;AACvE,MAAI;AACF,UAAMZ,KAAK,CAACwB,MAAN,CAAc,kCAAiCD,SAAU,EAAzD,CAAN;AACAX,IAAAA,QAAQ,CAACL,aAAa,CAACgB,SAAD,CAAd,CAAR;AACD,GAHD,CAGE,OAAOL,KAAP,EAAc;AACdN,IAAAA,QAAQ,CAACX,QAAQ,CAAC,yBAAD,CAAT,CAAR;AACD,GALD,SAKU;AACRW,IAAAA,QAAQ,CAACR,SAAS,EAAV,CAAR;AACD;AACF,CATM","sourcesContent":["import axios from \"axios\";\nimport { setError, resetError } from \"../action/errorAction\";\nimport { loaderOn, loaderOff } from \"../action/loaderAction\";\nimport {\n  setContactLocalStorage,\n  addConct,\n  deleteContact,\n  setContact,\n} from \"../action/contactAction\";\nimport { resetToken, setToken } from \"../action/tokenAction\";\n\n// const options = {\n//   header: {\n//     \"Content-type\": \"application/json\",\n//   },\n// };\n\nexport const getContactsOperation = () => async (dispatch) => {\n  try {\n    dispatch(loaderOn());\n    const result = await axios.get(`http://localhost:5000/contacts`);\n    console.log(result);\n    dispatch(setContact(result.data));\n  } catch (error) {\n    dispatch(setError(\"Оууууу, щось сталось =D\"));\n  } finally {\n    dispatch(loaderOff());\n  }\n};\n\nexport const postContactsOperations = (contact) => async (dispatch) => {\n  try {\n    dispatch(loaderOn());\n    await axios.post(`http://localhost:5000/contacts`, contact);\n  } catch (error) {\n    dispatch(setError(\"Оууууу, щось сталось =D\"));\n  } finally {\n    dispatch(loaderOff());\n  }\n};\n\nexport const deleteContactOperation = (contactId) => async (dispatch) => {\n  try {\n    await axios.delete(`http://localhost:5000/contacts/${contactId}`);\n    dispatch(deleteContact(contactId));\n  } catch (error) {\n    dispatch(setError(\"Оууууу, щось сталось =D\"));\n  } finally {\n    dispatch(loaderOff());\n  }\n};\n"]},"metadata":{},"sourceType":"module"}