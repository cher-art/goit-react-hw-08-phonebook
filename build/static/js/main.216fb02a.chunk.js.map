{"version":3,"sources":["Component/Header/Header.module.css","Component/Form/Form.module.css","Component/ContactList/ContactList.module.css","Component/Containers/Login/Login.module.css","Component/Containers/Registration/Registration.module.css","Component/Filter/Filter.module.css","Component/contstant.js","redux/operationsTaskConstant/index.js","redux/action/errorAction.js","redux/action/loaderAction.js","redux/operationsTokenConstant/index.js","redux/action/tokenAction.js","redux/operations/authOperations.js","Component/Header/Header.js","redux/mainConstant/index.js","redux/operations/taskOperations.js","Component/Form/Form.js","redux/action/alertAction.js","redux/action/contactAction.js","Component/ContactList/ContactList.js","reduxTool/actionTool/filter.js","reduxTool/ducksTool/index.js","Component/Filter/Filter.js","Component/PhoneBook/PhoneBook.js","Component/Containers/Contacts/Contacts.js","Component/Containers/Login/Login.js","Component/Containers/Registration/Registration.js","Component/App.js","redux/reducer/contactReducer.js","redux/reducer/index.js","redux/reducer/filterReducer.js","redux/reducer/alertReducer.js","redux/reducer/loaderReducer.js","redux/reducer/tokenReducer.js","redux/store.js","index.js"],"names":["module","exports","navigation","LOADER_ON","LOADER_OFF","SET_CONTACT","setError","text","type","payload","loaderOn","loaderOff","SET_TOKEN","RESET_TOKEN","setToken","token","axios","url","method","header","Header","dispatch","useDispatch","useSelector","state","history","useHistory","useEffect","push","className","styles","mainHeader","mainNav","home","to","onClick","a","headers","Authorization","logOut","logoutButton","singIn","registration","login","ADD_CONTACT","DELETE_CONTACT","SET_LOCAL_STORAGE","EDIT_FILTER","ALERT_ON","ALERT_OFF","options","initialState","name","number","Form","useState","data","setData","contacts","onHandleChange","target","value","contactForm","onSubmit","e","preventDefault","singleContact","some","contact","post","postContactsOperations","mainLabel","mainInput","onChange","formBtn","ContactList","id","contactList","contactBtn","ContactId","delete","deleteContactOperation","editFilter","createAction","Filter","filter","filterInputValue","PhoneBook","alert","isAlert","console","log","get","result","getContactsOperation","TransitionGroup","component","CSSTransition","classNames","mountOnEnter","unmountOnExit","timeout","in","appear","length","map","Contacts","email","password","Login","form","setForm","inputHeandler","title","loginForm","userData","placeholder","Registration","registrationForm","App","exact","path","rootRreducer","combineReducers","action","uuidv4","loader","middleWares","logger","thunk","persistConfig","key","storage","whitelist","rootMiddleWares","applyMiddleware","compose","composeWithDevTools","persistedReducer","persistReducer","store","createStore","persistor","persistStore","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.216fb02a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainHeader\":\"Header_mainHeader__1kt8t\",\"mainNav\":\"Header_mainNav__3k66-\",\"singIn\":\"Header_singIn__3VH76\",\"home\":\"Header_home__11m1C\",\"login\":\"Header_login__2Bvwa\",\"registration\":\"Header_registration__3HT7t\",\"logoutButton\":\"Header_logoutButton__11qXn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"Form_contactForm__2bm6X\",\"mainLabel\":\"Form_mainLabel__zNmmp\",\"mainInput\":\"Form_mainInput__2j580\",\"formBtn\":\"Form_formBtn__2LnlG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3vTYv\",\"contactListErr\":\"ContactList_contactListErr__2J27E\",\"contactBtn\":\"ContactList_contactBtn__2CPHz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Login_title__2Lkbe\",\"loginForm\":\"Login_loginForm__-bXJI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Registration_title__3OsdX\",\"registrationForm\":\"Registration_registrationForm__2FXEI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainInput\":\"Filter_mainInput__2srJO\"};","export const navigation = {\n  home: \"/ \",\n  login: \"/login\",\n  registration: \"/registration\",\n};\n","export const LOADER_ON = \"loader/on\";\nexport const LOADER_OFF = \"loader/off\";\n\nexport const SET_ERROR = \"error/set\";\nexport const RESET_ERROR = \"error/reset\";\n\nexport const SET_CONTACT = \"contact/set\";","import { RESET_ERROR, SET_ERROR } from \"../operationsTaskConstant/index\";\n\nexport const setError = (text) => ({\n  type: SET_ERROR,\n  payload: text,\n});\n\nexport const resetError = () => ({\n  type: RESET_ERROR,\n});\n","import { LOADER_ON, LOADER_OFF } from \"../operationsTaskConstant/index\";\n\nexport const loaderOn = () => ({\n  type: LOADER_ON,\n});\n\nexport const loaderOff = () => ({\n  type: LOADER_OFF,\n});\n","export const SET_TOKEN = \"token/set\";\nexport const RESET_TOKEN = \"token/reset\";\n","import { SET_TOKEN, RESET_TOKEN } from \"../operationsTokenConstant/index\";\n\nexport const setToken = (token) => ({\n  type: SET_TOKEN,\n  payload: token,\n});\n\nexport const resetToken = () => ({\n  type: RESET_TOKEN,\n});\n","import axios from \"axios\";\nimport { setError, resetError } from \"../action/errorAction\";\nimport { loaderOn, loaderOff } from \"../action/loaderAction\";\nimport { resetToken, setToken } from \"../action/tokenAction\";\n\nexport const registeredOperation = (userData) => async (dispatch) => {\n  try {\n    dispatch(loaderOn());\n    const result = await axios.post(\n      \"https://goit-phonebook-api.herokuapp.com/users/signup\",\n      userData\n    );\n    console.log(result);\n    dispatch(setToken(result.data.token));\n  } catch (error) {\n    dispatch(setError(\"bad request!\"));\n  } finally {\n    dispatch(loaderOff());\n  }\n};\n\nexport const loginOperation = (userData) => async (dispatch) => {\n  try {\n    dispatch(loaderOn());\n    const result = await axios.post(\n      \"https://goit-phonebook-api.herokuapp.com/users/login\",\n      userData\n    );\n    // console.log(result);\n    dispatch(setToken(result.data.token));\n  } catch (error) {\n    dispatch(setError(\"bad request!\"));\n  } finally {\n    dispatch(loaderOff());\n  }\n};\n\nexport const logOut = (token) => async (dispatch) => {\n  try {\n    dispatch(loaderOn());\n    const result = await axios({\n      url: \"https://goit-phonebook-api.herokuapp.com/users/logout\",\n      method: \"post\",\n      headers: { Authorization: `Bearer ${token}` },\n    });\n    dispatch(resetToken());\n  } catch (error) {\n    dispatch(setError(error));\n  } finally {\n    dispatch(loaderOff());\n  }\n};\n\naxios({\n  url: \"\",\n  method: \"post\",\n  header: {\n    \"Content-type\": \"application/json\",\n  },\n});\n","import React, { useEffect } from \"react\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport { navigation } from \"../contstant\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logOut } from \"../../redux/operations/authOperations\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport styles from \"./Header.module.css\";\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const token = useSelector((state) => state.token);\n  const history = useHistory();\n\n  const logout = () => {\n    dispatch(logOut(token));\n  };\n\n  useEffect(() => {\n    if (token) {\n      history.push(navigation.home);\n    } else {\n      history.push(navigation.login);\n    }\n  }, [token]);\n\n  return (\n    <header className={styles.mainHeader}>\n      <nav className={styles.mainNav}>\n        <NavLink className={styles.home} to={navigation.home}>\n          MyContacts\n        </NavLink>\n        {token && (\n          <button onClick={logout} className={styles.logoutButton}>\n            LOGOUT\n          </button>\n        )}\n\n        <div className={styles.singIn}>\n          <NavLink className={styles.registration} to={navigation.login}>\n            Login\n          </NavLink>\n          <NavLink className={styles.login} to={navigation.registration}>\n            Registartion\n          </NavLink>\n        </div>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","export const ADD_CONTACT = \"phoneBook/add\";\nexport const DELETE_CONTACT = \"phoneBook/delete\";\nexport const SET_LOCAL_STORAGE = \"phoneBook/setLocalStorage\";\n\nexport const EDIT_FILTER = \"filter/edit\";\n\nexport const ALERT_ON = \"alert/on\";\nexport const ALERT_OFF = \"alert/off\";\n","import axios from \"axios\";\nimport { setError, resetError } from \"../action/errorAction\";\nimport { loaderOn, loaderOff } from \"../action/loaderAction\";\nimport {\n  setContactLocalStorage,\n  addConct,\n  deleteContact,\n  setContact,\n} from \"../action/contactAction\";\nimport { resetToken, setToken } from \"../action/tokenAction\";\n\nconst options = (token) => ({\n  headers: {\n    Authorization: `Bearer ${token}`,\n  },\n\n});\n\nexport const getContactsOperation = (token) => async (dispatch) => {\n  try {\n    dispatch(loaderOn());\n    const result = await axios.get(\n      `https://goit-phonebook-api.herokuapp.com/contacts`,\n      options(token)\n    );\n    dispatch(setContact(result.data));\n  } catch (error) {\n    dispatch(setError(\"Оууууу, щось сталось =D\"));\n  } finally {\n    dispatch(loaderOff());\n  }\n};\n\nexport const postContactsOperations = (contact, token) => async (dispatch) => {\n  try {\n    dispatch(loaderOn());\n    const result = await axios.post(\n      `https://goit-phonebook-api.herokuapp.com/contacts`,\n      contact,\n      options(token)\n    );\n  } catch (error) {\n    dispatch(setError(\"Оууууу, щось сталось =D\"));\n  } finally {\n    dispatch(loaderOff());\n  }\n};\n\nexport const deleteContactOperation = (ContactId, token) => async (\n  dispatch\n) => {\n  try {\n    await axios.delete(\n      `https://goit-phonebook-api.herokuapp.com/contacts/${ContactId}`,\n      options(token)\n    );\n    dispatch(deleteContact(ContactId));\n  } catch (error) {\n    dispatch(setError(\"Оууууу, щось сталось =D\"));\n  } finally {\n    dispatch(loaderOff());\n  }\n};\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addContact } from \"../../redux/action/contactAction\";\nimport { alertOpen } from \"../../redux/action/alertAction\";\nimport {\n  getContactsOperation,\n  postContactsOperations,\n} from \"../../redux/operations/taskOperations\";\nimport styles from \"./Form.module.css\";\n\nconst initialState = {\n  name: \"\",\n  number: \"\",\n};\n\nconst Form = () => {\n  const [data, setData] = useState(initialState);\n  const { name, number } = data;\n  const contacts = useSelector((state) => state.contacts);\n  const token = useSelector((state) => state.token);\n  const dispatch = useDispatch();\n\n  const onHandleChange = ({ target }) => {\n    setData({ ...data, [target.name]: target.value });\n  };\n\n  const onHandleSubmit = (e) => {\n    e.preventDefault();\n    if (!name || !number) {\n      return;\n    }\n    const singleContact = {\n      name,\n      number,\n    };\n    if (contacts.some((contact) => contact.name === singleContact.name)) {\n      dispatch(alertOpen());\n    } else {\n      dispatch(postContactsOperations(singleContact, token));\n      dispatch(addContact(singleContact));\n      setData(initialState);\n    }\n  };\n\n  return (\n    <form className={styles.contactForm} onSubmit={onHandleSubmit}>\n      <label className={styles.mainLabel}>\n        Name\n        <input\n          className={styles.mainInput}\n          onChange={onHandleChange}\n          name=\"name\"\n          value={name}\n        />\n      </label>\n      <label className={styles.mainLabel}>\n        Number\n        <input\n          className={styles.mainInput}\n          onChange={onHandleChange}\n          name=\"number\"\n          value={number}\n        />\n      </label>\n      <button className={styles.formBtn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default Form;\n\n// class Form extends Component {\n//   state = {\n//     ...initialState,\n//   };\n\n//   onHandleChange = (e) => {\n//     this.props.isError && this.props.onSetError();\n//     const { name, value } = e.target;\n//     this.setState({ [name]: value });\n//   };\n\n//   onHandleSubmit = (e) => {\n//     e.preventDefault();\n//     this.state.name === \"\" || this.state.number === \"\"\n//       ? this.props.onSetError()\n//       : this.props.addContact({ ...this.state });\n//     this.setState({ ...initialState });\n//   };\n\n//   render() {\n//     return (\n//       <form className={styles.contactForm} onSubmit={this.onHandleSubmit}>\n//         <label className={styles.mainLabel}>\n//           Name\n//           <input\n//             className={styles.mainInput}\n//             onChange={this.onHandleChange}\n//             name=\"name\"\n//             value={this.state.name}\n//           />\n//         </label>\n//         <label className={styles.mainLabel}>\n//           Number\n//           <input\n//             className={styles.mainInput}\n//             onChange={(e) => this.onHandleChange(e)}\n//             name=\"number\"\n//             value={this.state.number}\n//           />\n//         </label>\n//         <button className={styles.formBtn} type=\"submit\">\n//           Add contact\n//         </button>\n//       </form>\n//     );\n//   }\n// }\n\n// export default Form;\n","import { ALERT_ON, ALERT_OFF } from \"../mainConstant/index\";\n\nexport const alertOpen = () => ({\n  type: ALERT_ON,\n});\n\nexport const alertClose = () => ({\n  type: ALERT_OFF,\n});\n","import { SET_CONTACT } from \"../operationsTaskConstant\";\nimport {\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_LOCAL_STORAGE,\n} from \"../mainConstant/index\";\n\nexport const addContact = (objContact) => ({\n  type: ADD_CONTACT,\n  payload: objContact,\n});\nexport const deleteContact = (id) => ({\n  type: DELETE_CONTACT,\n  payload: id,\n});\nexport const setContactLocalStorage = (array) => ({\n  type: SET_LOCAL_STORAGE,\n  payload: array,\n});\nexport const setContact = (contacts) => ({\n  type: SET_CONTACT,\n  payload: contacts,\n});\n","import React from \"react\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteContact } from \"../../redux/action/contactAction\";\nimport {\n  deleteContactOperation,\n  getContactsOperation,\n} from \"../../redux/operations/taskOperations\";\nimport styles from \"./ContactList.module.css\";\nimport \"./ContactList.css\";\n\nconst ContactList = ({ name, number, id }) => {\n  const token = useSelector((state) => state.token);\n  const dispatch = useDispatch();\n  const deleteItem = () => {\n    dispatch(deleteContactOperation(id, token));\n    // dispatch(getContactsOperation(token));\n    // dispatch(deleteContact(id));\n  };;\n  return (\n    <li className={styles.contactList} key={id}>\n      {name}: {number}\n      <button className={styles.contactBtn} onClick={deleteItem} type=\"button\">\n        Delete\n      </button>\n    </li>\n  );\n};;;\n\nexport default ContactList;\n","import { createAction } from \"@reduxjs/toolkit\";\nimport { EDIT_FILTER } from \"../ducksTool\";\n\nexport const editFilter = createAction(EDIT_FILTER);\n","export const EDIT_FILTER = \"filter/edit\";\nexport const CHANGE_FILTER = \"filter/change\";\n\nexport const ADD_ITEM = \"contacts/add\";\nexport const DELETE_ITEM = \"contacts/delete\";\nexport const SET_ITEMS = \"contacts/set\";\n","import React, { Component } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { editFilter } from \"../../reduxTool/actionTool/filter\";\nimport styles from \"./Filter.module.css\";\nimport \"./Filter.css\";\n\nconst Filter = () => {\n  const filter = useSelector((state) => state.filter);\n  const dispatch = useDispatch();\n\n  const inputHandler = (e) => {\n    e.preventDefault();\n    const filterInputValue = e.target.value;\n    dispatch(editFilter(filterInputValue));\n  };\n\n  return (\n    <label>\n      <input\n        className={styles.mainInput}\n        name=\"filter\"\n        type=\"text\"\n        onChange={inputHandler}\n        value={filter}\n      />\n    </label>\n  );\n};\n\n// class Filter extends Component {\n//   render() {\n//     const contactsLength = this.props.contacts.length;\n//     return (\n//       <CSSTransition\n//         in={contactsLength > 1}\n//         classNames=\"label\"\n//         timeout={500}\n//         unmountOnExit\n//       >\n//         <label>\n//           <input\n//             className={styles.mainInput}\n//             name=\"filter\"\n//             onChange={this.props.onHandleChange}\n//             value={this.props.filter}\n//           />\n//         </label>\n//       </CSSTransition>\n//     );\n//   }\n// }\n\nexport default Filter;\n","import React, { useEffect } from \"react\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { alertClose } from \"../../redux/action/alertAction\";\nimport { setContactLocalStorage } from \"../../redux/action/contactAction\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getContactsOperation,\n  postContactsOperations,\n} from \"../../redux/operations/taskOperations\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Form from \"../Form/Form\";\nimport ContactList from \"../ContactList/ContactList\";\nimport Filter from \"../Filter/Filter\";\nimport \"./PhoneBook.css\";\n\nconst PhoneBook = () => {\n  const contacts = useSelector((state) => state.contacts);\n  const filter = useSelector((state) => state.filter);\n  const alert = useSelector((state) => state.isAlert);\n  const token = useSelector((state) => state.token);\n  const dispatch = useDispatch();\n\n  console.log(contacts);\n\n  useEffect(() => {\n    dispatch(getContactsOperation(token));\n  }, [dispatch]);\n\n  const filterContacts = () => {\n    if (contacts.length >= 1 ) {\n      const filterArr = contacts.filter((contact) =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      );\n      return filterArr;\n    }\n  };\n\n  const closeAlert = () => {\n    dispatch(alertClose());\n  };\n\n  return (\n    <div className=\"phoneBook\">\n      <TransitionGroup className=\"alertBox\" component=\"div\">\n        {alert ? (\n          <CSSTransition\n            classNames=\"alert__Box\"\n            mountOnEnter\n            unmountOnExit\n            timeout={800}\n          >\n            <div className=\"alert__Box\">\n              <h2>{`A contact with the same name already exists!`}</h2>\n              <button onClick={closeAlert} className=\"alertButton\">\n                ok\n              </button>\n            </div>\n          </CSSTransition>\n        ) : null}\n      </TransitionGroup>\n\n      <CSSTransition\n        in={true}\n        appear={true}\n        timeout={500}\n        classNames=\"logo\"\n        unmountOnExit\n      >\n        <h1 className=\"title\">PhoneBook</h1>\n      </CSSTransition>\n      <CSSTransition\n        in={true}\n        appear={true}\n        timeout={500}\n        classNames=\"form\"\n        unmountOnExit\n      >\n        <Form />\n      </CSSTransition>\n      <CSSTransition\n        // in={filterContacts().length >= 1}\n        timeout={250}\n        classNames=\"contactTitle\"\n        unmountOnExit\n      >\n        <h2 className=\"findTitle\">Find contacts</h2>\n      </CSSTransition>\n      <CSSTransition\n        // in={filterContacts().length >= 1}\n        timeout={250}\n        classNames=\"contactTitle\"\n        unmountOnExit\n      >\n        <Filter />\n      </CSSTransition>\n      <TransitionGroup component=\"ul\" className=\"list\">\n        {contacts.length >= 1 && contacts.map((contact) => (\n              <CSSTransition classNames=\"list__item\" timeout={800}>\n                <ContactList {...contact} />\n              </CSSTransition>\n            ))}\n      </TransitionGroup>\n    </div>\n  );\n};\n\nexport default PhoneBook;\n\n// class PhoneBook extends Component {\n//   state = {\n//     contacts: [],\n//     filter: \"\",\n//     name: \"\",\n//     isError: false,\n//     alert: false,\n//     // number: '',\n//   };\n\n//   componentDidMount() {\n//     const persistedTasks = localStorage.getItem(\"contacts\");\n//     if (persistedTasks) {\n//       this.setState({\n//         contacts: JSON.parse(persistedTasks),\n//       });\n//     }\n//   }\n\n//   componentDidUpdate(prevProps, prevState) {\n//     if (prevState.contacts !== this.state.contacts) {\n//       localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n//     }\n//   }\n\n//   addContact = (contact) => {\n//     const arr = this.state.contacts;\n//     const result = arr.some((item) => item.name.includes(contact.name));\n//     result\n//       ? this.setState({ alert: result })\n//       : this.setState((prev) => ({\n//           contacts: [...prev.contacts, { ...contact, id: uuidv4() }],\n//         }));\n//   };\n\n//   deleteContact = (id) => {\n//     this.setState({\n//       contacts: this.state.contacts.filter((contact) => contact.id !== id),\n//     });\n//   };\n\n//   filterContact = () => {\n//     return this.state.contacts.filter((contact) =>\n//       contact.name.toLowerCase().includes(this.state.filter.toLowerCase())\n//     );\n//   };\n\n//   onHandleChange = (e) => {\n//     const { name, value } = e.target;\n//     this.setState({ [name]: value });\n//   };\n\n//   onSetError = () => {\n//     this.setState((prev) => ({ isError: !prev.isError }));\n//   };\n\n//   closeAlert = () => {\n//     this.setState({ alert: false });\n//   };\n\n//   render() {\n//     const { isError } = this.state;\n//     return (\n//       <>\n//         <TransitionGroup className=\"alertBox\" component=\"div\">\n//           {this.state.alert ? (\n//             <CSSTransition\n//               classNames=\"alert__Box\"\n//               mountOnEnter\n//               unmountOnExit\n//               timeout={800}\n//             >\n//               <div className=\"alert__Box\">\n//                 <h2>{`A contact with the same name already exists!`}</h2>\n//                 <button onClick={this.closeAlert} className=\"alertButton\">\n//                   ok\n//                 </button>\n//               </div>\n//             </CSSTransition>\n//           ) : null}\n//         </TransitionGroup>\n\n//         <CSSTransition\n//           in={true}\n//           appear={true}\n//           timeout={500}\n//           classNames=\"logo\"\n//           unmountOnExit\n//         >\n//           <h1 className=\"title\">PhoneBook</h1>\n//         </CSSTransition>\n//         <CSSTransition\n//           in={true}\n//           appear={true}\n//           timeout={1000}\n//           classNames=\"form\"\n//           unmountOnExit\n//         >\n//           <Form\n//             addContact={this.addContact}\n//             isError={this.state.isError}\n//             onSetError={this.onSetError}\n//           />\n//         </CSSTransition>\n//         <CSSTransition\n//           in={this.state.contacts.length > 1}\n//           timeout={250}\n//           classNames=\"contactTitle\"\n//           unmountOnExit\n//         >\n//           <h2 className=\"title\">Find contacts</h2>\n//         </CSSTransition>\n//         <CSSTransition\n//           in={isError}\n//           classNames=\"notFound\"\n//           timeout={500}\n//           unmountOnExit\n//         >\n//           <h2 className={styles.contactListErr}>\n//             Name or Contact is not found!!!\n//           </h2>\n//         </CSSTransition>\n//         <Filter\n//           filter={this.state.filter}\n//           onHandleChange={this.onHandleChange}\n//           contacts={this.state.contacts}\n//         />\n//         {/* <CSSTransition> */}\n//         <ContactList\n//           contacts={\n//             this.state.filter ? this.filterContact() : this.state.contacts\n//           }\n//           deleteContact={this.deleteContact}\n//         />\n//         {/* </CSSTransition> */}\n//       </>\n//     );\n//   }\n// }\n\n// export default PhoneBook;\n","import React from \"react\";\nimport PhoneBook from \"../../PhoneBook/PhoneBook\";\n\nconst Contacts = () => {\n  return (\n    <div>\n      <PhoneBook />\n    </div>\n  );\n};\n\nexport default Contacts;\n","import React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { navigation } from \"../../contstant\";\nimport { loginOperation } from \"../../../redux/operations/authOperations\";\nimport styles from \"./Login.module.css\";\n\nconst initialState = {\n  email: \"\",\n  password: \"\",\n};\n\nconst Login = () => {\n  const [form, setForm] = useState(initialState);\n  const dispatch = useDispatch();\n\n  const inputHeandler = ({ target }) => {\n    const { name, value } = target;\n    setForm((state) => ({ ...state, [name]: value }));\n  };\n\n  const submit = (e) => {\n    e.preventDefault();\n    dispatch(loginOperation(form));\n  };\n\n  return (\n    <div>\n      <h1 className={styles.title}>Login</h1>\n      <form className={styles.loginForm} onSubmit={submit}>\n        <input\n          onChange={inputHeandler}\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"email\"\n        ></input>\n        <input\n          onChange={inputHeandler}\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"password\"\n        ></input>\n        <button type=\"submit\">Login</button>\n        <p>\n          If you already have an account please{\" \"}\n          <NavLink to={navigation.registration}>Registered</NavLink>\n        </p>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { navigation } from \"../../contstant\";\nimport { registeredOperation } from \"../../../redux/operations/authOperations\";\nimport styles from \"./Registration.module.css\";\n\nconst initialState = {\n  name: \"\",\n  email: \"\",\n  password: \"\",\n};\n\nconst Registration = () => {\n  const [form, setForm] = useState(initialState);\n  const dispatch = useDispatch();\n\n  const inputHeandler = ({ target }) => {\n    const { name, value } = target;\n    setForm((state) => ({ ...state, [name]: value }));\n  };\n\n  const submit = (e) => {\n    e.preventDefault();\n    dispatch(registeredOperation(form));\n  };\n\n  return (\n    <div>\n      <h1 className={styles.title}>Registration</h1>\n      <form className={styles.registrationForm} onSubmit={submit}>\n        <input\n          onChange={inputHeandler}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"username\"\n          value={form.name}\n        ></input>\n        <input\n          onChange={inputHeandler}\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"email\"\n          value={form.email}\n        ></input>\n        <input\n          onChange={inputHeandler}\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"password\"\n          value={form.password}\n        ></input>\n        <button type=\"submit\">Sing UP</button>\n        <p>\n          If you already have an account please\n          <NavLink to={navigation.login}>login</NavLink>\n        </p>\n      </form>\n    </div>\n  );\n};\n\nexport default Registration;\n","import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Switch, Route, Redirect, useHistory } from \"react-router-dom\";\nimport { navigation } from \"./contstant\";\nimport Header from \"./Header/Header\";\nimport Contacts from \"./Containers/Contacts/Contacts\";\nimport Login from \"./Containers/Login/Login\";\nimport Registration from \"./Containers/Registration/Registration\";\nimport \"./App.css\";\n\nfunction App() {\n  const token = useSelector((state) => state.token);\n  const history = useHistory();\n  useEffect(() => {\n    if (token) {\n      history.push(navigation.home);\n    } else {\n      history.push(navigation.login);\n    }\n  }, [token]);\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        {token ? (\n          <Route exact path={navigation.home} component={Contacts} />\n        ) : (\n          <Route path={navigation.login} component={Login} />\n        )}\n        <Route path={navigation.login} component={Login} />\n        <Route path={navigation.registration} component={Registration} />\n        <Redirect path={navigation.login} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import {\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_LOCAL_STORAGE,\n} from \"../mainConstant/index\";\nimport { SET_CONTACT } from \"../operationsTaskConstant/index\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst initialState = [];\n\nexport const contacts = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_LOCAL_STORAGE:\n      return [...action.payload];\n    case ADD_CONTACT:\n      return [...state, { ...action.payload, id: uuidv4() }];\n    case DELETE_CONTACT:\n      return state.filter((contact) => contact.id !== action.payload);\n    case SET_CONTACT:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { contacts } from \"./contactReducer\";\nimport { filter } from \"../reducer/filterReducer\";\nimport { isAlert } from \"../reducer/alertReducer\";\nimport loader from \"../reducer/loaderReducer\";\nimport token from \"./tokenReducer\";\nconst rootRreducer = combineReducers({\n  contacts,\n  filter,\n  isAlert,\n  loader,\n  token,\n});\n\nexport default rootRreducer;\n","import { EDIT_FILTER } from \"../mainConstant/index\";\n\nconst initialState = \"\";\n\nexport const filter = (state = initialState, action) => {\n  switch (action.type) {\n    case EDIT_FILTER:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","import { ALERT_ON, ALERT_OFF } from \"../mainConstant/index\";\n\nconst initilState = false;\n\nexport const isAlert = (state = initilState, action) => {\n  switch (action.type) {\n    case ALERT_ON:\n      return true;\n    case ALERT_OFF:\n      return false;\n    default:\n      return state;\n  }\n};\n","import { LOADER_ON, LOADER_OFF } from \"../operationsTaskConstant/index\";\nconst initialState = false;\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case LOADER_ON:\n      return true;\n    case LOADER_OFF:\n      return false;\n    default:\n      return state;\n  }\n};\n","import { SET_TOKEN, RESET_TOKEN } from \"../operationsTokenConstant/index\";\n\nconst initialState = null;\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_TOKEN:\n      return action.payload;\n    case RESET_TOKEN:\n      return null;\n    default:\n      return state;\n  }\n};\n","import { applyMiddleware, createStore } from \"redux\";\nimport {\n  composeWithDevTools,\n  devToolsEnhancer,\n} from \"redux-devtools-extension\";\nimport rootRreducer from \"./reducer\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport logger from \"redux-logger\";\nimport thunk from \"redux-thunk\";\n\nconst middleWares = [logger, thunk];\n\nconst persistConfig = {\n  key: \"token\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nconst rootMiddleWares = applyMiddleware(...middleWares);\nconst compose = composeWithDevTools(rootMiddleWares);\n\nconst persistedReducer = persistReducer(persistConfig, rootRreducer);\n\nexport const store = createStore(persistedReducer, compose);\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Component/App\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/store\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}